#include<stdio.h>
#include<CONIO.h>
#include<string.h>
#include<alloc.h>

struct student{
int id;
char name[20];
int grade[3];
};
int last;
struct student std[5];
void menu(void);
void fillStudent(void);
void printStudent();
void print(void);
void bubbleSort();
void mergeSort(int LB, int UB);
void merge(int low, int mid, int high);
void binarySearch(int LB, int UB);
int main(){

char ch;
int y=1;
int a,b;
int flag=0;
int j=1;

clrscr();
menu();
do{
ch = getch();
if(ch == 0){
ch = getch();
if (ch==72){
if(y>1)
gotoxy(1,--y);
}
else if (ch==80){

if(y<6)
gotoxy(1,++y);
}
else if (ch==71){
gotoxy(1,1);
y=1;
}
}else{
if(ch==13){
if(y==1 && flag==0){   //Bubble sort
clrscr();
bubbleSort();
clrscr();
printf("\nPress enter to get back to menu");
flag=1;
ch = getch();
y=1;
if(ch){
clrscr();
menu();
}
flag=0;
}
else if(y==2 && flag==0){ //Merge sort
clrscr();
mergeSort(0,last-1);
printf("\nPress enter to get back to menu");
flag=1;
ch = getch();
y=1;
if(ch){
clrscr();
menu();
}
flag=0;
}
else if(y==3 && flag==0){  //Binary search
clrscr();
binarySearch(0, last-1);
printf("\nPress enter to get back to menu");
flag=1;
ch = getch();
y=1;
if(ch){
clrscr();
menu();
}
flag=0;
}
else if(y==4 && flag==0){  //fill student
clrscr();
fillStudent();
printf("\nPress enter to get back to menu");
flag=1;
ch = getch();
y=1;
if(ch){
clrscr();
menu();
}
flag=0;
}
else if(y==5 && flag==0){  //print
clrscr();
printStudent();
printf("\nPress enter to get back to menu");
flag=1;
ch = getch();
y=1;
if(ch){
clrscr();
menu();
}
flag=0;
}
else if(y==6){
j=0;
}
}else if(ch==27){
j=0;
}
else if(ch==55){//cause home needs two buttons
y=1;
gotoxy(1,1);
}
}

}while(j != 0);

return 0;
}
void menu(){
gotoxy(1,1);
printf("1-Bubble sort\n");
gotoxy(1,2);
printf("2-Merge sort\n");
gotoxy(1,3);
printf("3-Binary search\n");
gotoxy(1,4);
printf("4-Fill student\n");
gotoxy(1,5);
printf("5-Print all students\n");
gotoxy(1,6);
printf("6-Exit\n");
gotoxy(1,1);
}
void fillStudent(void)
{

	if(last<5){
	printf("Enter id of Student: ");
	scanf("%d",&std[last].id);
	printf("\nEnter name of Student: ");
	scanf("%s",std[last].name);
	}
       last++;
}


void printStudent(){
	int i,j;
	for(j=0;j<last;j++){

	printf("\nId of student= %d",std[j].id);
	printf("\nThe name of Student: %s",std[j].name);
	}
}

void bubbleSort(){
	int i, j;
	struct student temp;
	int flag=1;
	int s=5;

	for (i=0;i<last-1;i++){

	for(j=0;j<last-1-i;j++){

		if(std[j].id > std[j+1].id){

			temp=std[j];
			std[j]=std[j+1];
			std[j+1]=temp;
			flag=1;

					    }

				}
			      }

}


void mergeSort(int LB, int UB){

	int middle;

	if(LB<UB){

		middle = (LB+UB)/2;
		mergeSort(LB,middle);
		mergeSort(middle+1,UB);
		merge(LB,middle,UB);

	}



}

void merge(int low, int mid, int high){

	struct student temp[5];
	int list1,list2,i;
	list1=low;
	list2=mid+1;
	i=low;

	while(list1<=mid&&list2<=high){

	if((strcmp(std[list1].name,std[list2].name))<0){

		temp[i]=std[list1];
		list1++;
		i++;
	}
	else{
		temp[i] = std[list2];
		list2++;
		i++;
	}

	}
	while(list1<=mid){

		temp[i] = std[list1];
		i++;
		list1++;

	}
	while(list2<=high){

		temp[i] = std[list2];
		i++;
		list2++;
	}
	for(i=low;i<=high;i++){

		std[i] = temp[i];
	}

}

void binarySearch(int LB, int UB){
	int middle;
	int loc=-1;
	int data;

	printf("Enter the id you want to find:");
	scanf("%d",&data);

	while(LB<=UB && loc==-1){

		middle=(LB+UB)/2;

	if(std[middle].id == data){

		loc = middle;
	}
	else if(std[middle].id < data){

		LB = middle+1;
	}
	else{
		UB = middle-1;
	}

	}
	if(loc != -1){

		printf("Data: %d is found at location %d",data, loc);
	}
	else{

		printf("Data not found");
	}
}



